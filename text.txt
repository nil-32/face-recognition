main.py

import cv2

cap = cv2.VideoCapture(0)

face_model = cv2.CascadeClassifier("haarcascade-frontalface-default.xml")

while True:
    status, photo = cap.read()
    face_cor = face_model.detectMultiScale(photo)
    if len(face_cor) == 0:
        pass
    else:
        x1, y1, w, h = face_cor[0]
        x2, y2 = x1 + w, y1 + h
        photo = cv2.rectangle(photo, (x1, y1), (x2, y2), [0, 255, 0], 3)
    cv2.imshow("Face Detection", photo)
    if cv2.waitKey(10) == 13:
        break
cv2.destroyAllWindows()

ismatch.py

import threading
import cv2

from deepface import DeepFace

face_classifier = cv2.CascadeClassifier(
    cv2.data.haarcascades + "haarcascade_frontalface_default.xml"
)
# görüntü işlerken dlib
cpt = cv2.VideoCapture(0, cv2.CAP_DSHOW)

cpt.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
cpt.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)

counter = 0

face_match = False

reference_img = cv2.imread("reference.jpg")


def check_face(frame):
    global face_match
    try:
        if DeepFace.verify(frame, reference_img)['verified']:
            face_match = True
        else:
            face_match = False
    except ValueError:
        pass


def detect_bounding_box(vid):
    gray_image = cv2.cvtColor(vid, cv2.COLOR_BGR2GRAY)
    faces = face_classifier.detectMultiScale(gray_image, 1.1, 5, minSize=(40, 40))
    for (x, y, w, h) in faces:
        cv2.rectangle(vid, (x, y), (x + w, y + h), (0, 255, 0), 4)
    return faces


while True:
    retrn, frame = cpt.read()
    frame = cv2.flip(frame, 1)
    faces = detect_bounding_box(frame)
    if retrn:
        if counter % 30 == 0:
            try:
                threading.Thread(target=check_face, args=(frame.copy(),)).start()
            except ValueError:
                pass
        counter += 1

        if face_match:
            cv2.putText(frame, "match", (20, 450), cv2.FONT_HERSHEY_SIMPLEX, 2, (0, 255, 0), 3)
        else:
            cv2.putText(frame, " no match", (20, 450), cv2.FONT_HERSHEY_SIMPLEX, 2, (0, 0, 255), 3)

        cv2.imshow("video", frame)

    key = cv2.waitKey(1)

    if key == ord("q"):
        break

cv2.destroyAllWindows()


facerecog.py

import face_recognition

known_face_encd = []
known_face_name = []

p1img = face_recognition.load_image_file("C:\Users\niloa\OneDrive\Desktop\facerecognition\my_db\Nil_Akyldz.jpeg")
p1enc =face_recognition.face_encodings(p1img)[0]
known_face_encd.append(p1enc)
known_face_name.append("Person 1")
